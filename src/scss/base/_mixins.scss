@use 'sass:math';


/* media queries*/
@mixin max-width($width) {
  @media screen and (max-width: $width) {
    @content;
  }
}

@mixin min-width($width) {
  @media (min-width: $width) {
    @content;
  }
}

@mixin max-height($height) {
  @media (max-height: $height) {
    @content;
  }
}

@mixin min-height($height) {
  @media (min-height: $height) {
    @content;
  }
}

/* mixin for hover supported devices */
@mixin hover-supported {
  @media not all and (hover: none) {
    &:hover {
      @content;
    }
  }
}

/* container */
@mixin container($maxW: false) {
  @if $maxW {width: min(100% - var(--global-padding), #{$maxW});}
  margin-inline: auto;
}

/*  pseudo element */
@mixin pseudo($content: '', $position: false, $display: block) {
  content: $content;
  @if $position {position: $position};
  display: $display;
}

@mixin position($position: false, $left: false, $right: false, $bottom: false, $top: false, $width: false) {
  @if $position {position: $position};
  @if $left {left: $left};
  @if $right {right: $right};
  @if $bottom {bottom: $bottom};
  @if  $top {top: $top};
  @if $width {width: $width;}
}

/* Flex */
@mixin d-flex(
  $justify-content: false,
  $align-items: false,
  $direction: false,
  $wrap: false) {
  display: flex;
  @if $justify-content {justify-content: $justify-content};
  @if $align-items {align-items: $align-items};
  @if $direction {flex-direction: $direction;}
  @if $wrap {flex-wrap: $wrap;}
}

/* visible */
@mixin visible($zIndex: 1) {
  opacity: 1;
  visibility: visible;
  z-index: $zIndex;
  pointer-events: auto;
}

/* hidden */
@mixin hidden {
  opacity: 0;
  visibility: hidden;
  pointer-events: none;
}

@mixin blur {
  backdrop-filter: blur(9px);
  -webkit-backdrop-filter: blur(9px);
}

@function rem($pixels) {
  @if math.is-unitless($pixels) {
    @return math.div($pixels, 16) + rem;
  } @else {
    @error 'Don\'t use units when using the rem() function; only numbers.';
  }
}
